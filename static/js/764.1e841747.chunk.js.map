{"version":3,"file":"static/js/764.1e841747.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactListItem/ContactListItem.jsx","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Spiner = styled.div`\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\nborder: 4px solid #ccc;\nborder-top-color: #999;\nanimation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(360deg);\n}`;\n\nexport const FormAddBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  padding: 20px;\n  width: 300px;\n  margin: auto;\n`;\n\nexport const FormAddTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const FormAddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: #333;\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations/operations';\n\nimport TextField from '@mui/material/TextField';\n\nimport { getTasks } from '../../redux/selectors/selectors';\nimport {\n  FormAddBox,\n  FormAddBtn,\n  FormAddTitle,\n  Spiner,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const contactsData = useSelector(getTasks);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    const newContact = { name: name.value, number: number.value };\n\n    if (checkDuplicateContact(newContact)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    e.target.reset();\n  };\n\n  const checkDuplicateContact = newContact => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n  };\n\n  return (\n    <FormAddBox>\n      <form onSubmit={handleSubmit}>\n        <FormAddTitle>Contacts</FormAddTitle>\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          id=\"number\"\n          label=\"Number\"\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        {contactsData.operation === 'add' ? (\n          <FormAddBtn>\n            <Spiner />\n          </FormAddBtn>\n        ) : (\n          <FormAddBtn>Add contact</FormAddBtn>\n        )}\n      </form>\n    </FormAddBox>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/Slices/Slices';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      id=\"outlined-basic\"\n      label=\"find contacts by name\"\n      variant=\"outlined\"\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={e => dispatch(filterContacts(e.target.value))}\n      size=\"small\"\n    />\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@mui/material/Divider';\n\nconst ContactsListItem = ({ id, name, number, children }) => {\n  return (\n    <>\n      <li key={id}>\n        {name}: {number} {children}\n      </li>\n      <Divider />\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\nexport const Spiner = styled.div`\nwidth: 20px;\nheight: 20px;\nborder-radius: 50%;\nborder: 4px solid #ccc;\nborder-top-color: #999;\nanimation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(360deg);\n}`;\n\nexport const ListBtn = styled.button`\n  display: block;\n  margin-top: 10px;\n  padding: 10px 20px;\n  font-size: 18px;\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  border: 2px solid red;\n  color: red;\n  &:hover {\n    border-color: darkred;\n    background-color: white;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations/operations';\nimport ContactsListItem from '../contactListItem/ContactListItem';\n\nimport { ListBtn, Spiner } from './ContactList.styled';\n\nconst ContactsList = () => {\n  const [loadingContacts, setLoadingContacts] = useState([]);\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleClick = id => {\n    setLoadingContacts(prevState => [...prevState, id]);\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(contact => (\n          <ContactsListItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          >\n            <ListBtn onClick={() => handleClick(contact.id)}>\n              {loadingContacts.includes(contact.id) ? <Spiner /> : 'delete'}\n            </ListBtn>\n          </ContactsListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const Spiner = styled.div`\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\nborder: 4px solid #ccc;\nborder-top-color: #999;\nanimation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(360deg);\n}`;\n\nexport const ContactsWrapper = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const ContactsTitle = styled.h1`\n  text-align: center;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/operations/operations';\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport Filter from '../../components/filter/Filter';\nimport ContactsList from '../../components/contactList/ContactList';\n\nimport { ContactsTitle, ContactsWrapper, Spiner } from './Contacts.styled';\n\nimport { getTasks } from '../../redux/selectors/selectors';\n\nconst Contacts = () => {\n  const contactsData = useSelector(getTasks);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsWrapper>\n      <ContactsTitle>Phonebook</ContactsTitle>\n      <div style={{ marginBottom: '20px' }}>\n        <ContactForm />\n      </div>\n      <div>\n        {contactsData.operation === 'fatch' ? (\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Spiner />\n          </div>\n        ) : (\n          <>\n            <Filter />\n            <ContactsList />\n          </>\n        )}\n      </div>\n    </ContactsWrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Spiner","styled","FormAddBox","FormAddTitle","FormAddBtn","contacts","useSelector","state","items","contactsData","getTasks","dispatch","useDispatch","checkDuplicateContact","newContact","some","contact","name","toLowerCase","onSubmit","e","preventDefault","target","elements","number","value","alert","addContact","reset","TextField","id","label","variant","type","pattern","title","required","operation","filter","onChange","filterContacts","size","children","Divider","ListBtn","useState","loadingContacts","setLoadingContacts","filteredContacts","includes","map","onClick","prevState","deleteContact","ContactsWrapper","ContactsTitle","useEffect","fetchContacts","style","marginBottom","display","justifyContent"],"sourceRoot":""}